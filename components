` Navbar.vue`:

<template>
  <nav>
    <ul>
      <li>
        <router-link to="/">首页</router-link>
      </li>
      <li>
        <router-link to="/videos">视频列表</router-link>
      </li>
      <li>
        <router-link to="/upload">上传视频</router-link>
      </li>
    </ul>
  </nav>
</template>

<script>
export default {
  name: 'Navbar'
};
</script>

<style scoped>
nav {
  background-color: #333;
  padding: 10px;
}

nav ul {
  list-style: none;
  padding: 0;
  margin: 0;
  display: flex;
}

nav ul li {
  margin-right: 10px;
}

nav ul li a {
  color: white;
  text-decoration: none;
}
</style>

`VideoItem.vue`:

<!-- src/components/VideoItem.vue -->
<template>
  <div class="video-item">
    <img :src="video.thumbnail" :alt="video.title" />
    <h3>{{ video.title }}</h3>
  </div>
</template>

<script>
export default {
  name: 'VideoItem',
  props: {
    video: Object
  }
};
</script>

<style scoped>
.video-item {
  display: flex;
  align-items: center;
}

.video-item img {
  width: 100px;
  height: 60px;
  margin-right: 10px;
}

.video-item h3 {
  margin: 0;
}
</style>

`VideoList.vue`:

<!-- src/components/VideoList.vue -->
<template>
  <div class="video-list">
    <video-item v-for="video in videos" :key="video.id" :video="video"></video-item>
  </div>
</template>

<script>
import axios from 'axios';
import VideoItem from './VideoItem.vue';

export default {
  name: 'VideoList',
  components: {
    VideoItem
  },
  data() {
    return {
      videos: []
    };
  },
  async created() {
    const response = await axios.get('/api/videos');
    this.videos = response.data;
  }
};
</script>

<style scoped>
.video-list {
  display: flex;
  flex-wrap: wrap;
}

.video-item {
  width: 33.33%;
  padding: 15px;
}
</style>

`VideoPlayer.vue`:

<!-- src/components/VideoPlayer.vue -->
<template>
  <div class="video-player">
    <video controls :src="videoUrl" @ended="onVideoEnded"></video>
  </div>
</template>

<script>
export default {
  name: 'VideoPlayer',
  props: {
    videoUrl: String
  },
  methods: {
    onVideoEnded() {
      this.$emit('videoEnded');
    }
  }
};
</script>

<style scoped>
.video-player {
  width: 100%;
  text-align: center;
}

.video-player video {
  max-width: 100%;
  height: auto;
}
</style>

`UploadForm.vue`：

<!-- src/components/UploadForm.vue -->
<template>
  <form @submit.prevent="onSubmit" enctype="multipart/form-data">
    <label for="title">视频标题:</label>
    <input type="text" id="title" v-model="title" required />

    <label for="video-file">选择视频:</label>
    <input type="file" id="video-file" @change="onFileChange" required />

    <button type="submit">上传</button>
  </form>
</template>

<script>
import axios from 'axios';

export default {
  name: 'UploadForm',
  data() {
    return {
      title: '',
      file: null
    };
  },
  methods: {
    onFileChange(e) {
      this.file = e.target.files[0];
    },
    async onSubmit() {
      if (!this.file) {
        alert('请选择一个视频文件');
        return;
      }

      const formData = new FormData();
      formData.append('title', this.title);
      formData.append('file', this.file);

      try {
        await axios.post('/api/videos', formData, {
          headers: {
            'Content-Type': 'multipart/form-data'
          }
        });
        alert('视频上传成功');
        this.title = '';
        this.file = null;
      } catch (error) {
        alert('视频上传失败');
      }
    }
  }
};
</script>

<style scoped>
form {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
</style>

`CommentItem.vue`：

<!-- src/components/CommentItem.vue -->
<template>
  <div class="comment-item">
    <div class="comment-author">{{ comment.author }}</div>
    <div class="comment-content">{{ comment.content }}</div>
  </div>
</template>

<script>
export default {
  name: 'CommentItem',
  props: {
    comment: Object
  }
};
</script>

<style scoped>
.comment-item {
  display: flex;
  flex-direction: column;
  border-bottom: 1px solid #ccc;
  padding: 10px;
}

.comment-author {
  font-weight: bold;
}
</style>

`CommentsList.vue`：

<!-- src/components/CommentsList.vue -->
<template>
  <div class="comments-list">
    <h3>评论</h3>
    <comment-item v-for="comment in comments" :key="comment.id" :comment="comment"></comment-item>
  </div>
</template>

<script>
import axios from 'axios';
import CommentItem from './CommentItem.vue';

export default {
  name: 'CommentsList',
  components: {
    CommentItem
  },
  props: {
    videoId: Number
  },
  data() {
    return {
      comments: []
    };
  },
  async created() {
    const response = await axios.get(`/api/videos/${this.videoId}/comments`);
    this.comments = response.data;
  }
};
</script>

<style scoped>
.comments-list {
  display: flex;
  flex-direction: column;
}
</style>
